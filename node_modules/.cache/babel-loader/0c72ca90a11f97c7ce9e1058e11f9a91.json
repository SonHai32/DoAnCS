{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/slackapp/src/components/Auth/Login.js\";\nimport React from 'react';\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../firebase';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      errors: [],\n      loading: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.isFormValid(this.state)) {\n        this.setState({\n          errors: [],\n          loading: true\n        });\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(signinUser => {\n          console.log('Sign in');\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n      } else {\n        let error = {\n          message: 'Please fill all fields'\n        };\n        let errors = [];\n        this.setState({\n          errors: errors.concat(error)\n        });\n      }\n    };\n\n    this.isFormValid = ({\n      email,\n      password\n    }) => email && password;\n\n    this.displayError = errors => {\n      errors.map((error, i) => React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, error.message));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          errors = _this$state.errors;\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      color: \"orange\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      name: \"email\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      placeholder: \"Email address\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      name: \"password\",\n      icon: \"key\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Button, {\n      fluid: true,\n      size: \"large\",\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Login\"), errors.length > 0 && React.createElement(Message, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Error\"), console.log(errors.error.message), this.displayError(errors)), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"You don't have an account ? \", React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Register\"))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/slackapp/src/components/Auth/Login.js"],"names":["React","Grid","Form","Segment","Button","Header","Message","Link","firebase","Login","Component","state","email","password","errors","loading","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","signinUser","console","log","catch","err","concat","error","message","displayError","map","i","render","maxWidth","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid, Form, Segment, Button, Header, Message} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport firebase from '../../firebase'\n\n\n\nclass Login extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        errors: [],\n        loading: false\n    \n    }\n    \n    handleChange = event =>{\n        this.setState({[event.target.name]: event.target.value})\n    }\n    \n    handleSubmit = event =>{\n        event.preventDefault();\n        if(this.isFormValid(this.state)){\n            this.setState({errors : [], loading: true});\n            firebase\n            .auth()\n            .signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then(signinUser =>{\n            console.log('Sign in')\n        })\n        .catch(err =>{\n            console.log(err);\n            this.setState({errors: this.state.errors.concat(err), loading: false })\n        })\n        }\n        else{\n            let error = {message: 'Please fill all fields'};\n            let  errors = [];\n            this.setState({errors: errors.concat(error)})\n        }\n    \n    }\n    isFormValid = ({email, password}) => email && password;\n\n    displayError = errors =>{\n        errors.map((error, i) => <p key={i}>{error.message}</p>)\n    }\n    render() {\n        const {email, password, errors} = this.state;\n        return (\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n                <Grid.Column style={{maxWidth: 450}}>\n                    <Header as=\"h2\" icon color=\"orange\" textAlign=\"center\">\n                        Login\n                    </Header>\n                    <Form size=\"large\" onSubmit={this.handleSubmit}>\n                        <Segment stacked>\n                            <Form.Input fluid name=\"email\" icon=\"mail\" iconPosition=\"left\"\n                            placeholder=\"Email address\" type=\"text\" onChange={this.handleChange} value={email} />\n                            <Form.Input fluid name=\"password\" icon=\"key\" iconPosition=\"left\"\n                            placeholder=\"Password\" type=\"password\" onChange={this.handleChange} value={password} />\n                            <Button fluid size=\"large\" color=\"orange\">Login</Button>\n                            {errors.length > 0 &&(\n                                <Message color=\"red\">\n                                    <h3>Error</h3>\n                                    {console.log(errors.error.message)}\n                                    {this.displayError(errors)}\n                                </Message>\n                            )}\n                            <Message>\n                                You don't have an account ? <Link to=\"/register\"> Register</Link>\n                            </Message>\n                        </Segment>\n\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}