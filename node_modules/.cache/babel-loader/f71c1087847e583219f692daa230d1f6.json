{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/slackapp/src/components/Auth/Register.js\";\nimport React from 'react';\nimport { Button, Grid, Header, Segment, Icon, Form, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../firebase';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.preventDefault();\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createedUser => {\n        console.log(createedUser);\n      });\n    };\n  }\n\n  render() {\n    // const { username, email, password, passwordConfirmation } = this.state;\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      icon: true,\n      color: \"orange\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"puzzle piece\",\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \"Register for.. \"), \" \", React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      name: \"username\",\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Username\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      name: \"email\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      placeholder: \"Email Address\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      name: \"password\",\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"passwordConfirmation\",\n      icon: \"repeat\",\n      iconPosition: \"left\",\n      placeholder: \"Password Confirmation\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: \"passwordConfirmation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"orange\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Submit \"), \" \", React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Already have an account ? \", React.createElement(Link, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Login \"), \" \"), \" \"), \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/slackapp/src/components/Auth/Register.js"],"names":["React","Button","Grid","Header","Segment","Icon","Form","Message","Link","firebase","Register","Component","state","username","email","password","passwordConfirmation","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","auth","createUserWithEmailAndPassword","then","createedUser","console","log","render","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Grid, Header, Segment, Icon, Form, Message } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport firebase from '../../firebase'\nclass Register extends React.Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n    };\n\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n\n    handleSubmit = event => {\n        this.preventDefault();\n\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(createedUser => {\n                console.log(createedUser);\n\n            })\n\n    }\n\n\n    render() {\n        // const { username, email, password, passwordConfirmation } = this.state;\n        return ( <\n            Grid textAlign = \"center\"\n            verticalAlign = \"middle\"\n            className = \"app\" >\n            <\n            Grid.Column style = {\n                { maxWidth: 450 }\n            } >\n            <\n            Header as = \"h2\"\n            icon color = \"orange\"\n            textAlign = \"center\" >\n            <\n            Icon name = \"puzzle piece\"\n            color = \"orange\" / >\n            Register\n            for.. <\n            /Header> <\n            Form size = \"large\"\n            onSubmit = { this.handleSubmit } >\n            <\n            Segment stacked >\n            <\n            Form.Input fluid name = \"username\"\n            icon = \"user\"\n            iconPosition = \"left\"\n            placeholder = \"Username\"\n            type = \"text\"\n            onChange = { this.handleChange }\n            value = \"username\" / >\n\n            <\n            Form.Input fluid name = \"email\"\n            icon = \"mail\"\n            iconPosition = \"left\"\n            placeholder = \"Email Address\"\n            type = \"text\"\n            onChange = { this.handleChange }\n            value = \"email\" / >\n\n            <\n            Form.Input fluid name = \"password\"\n            icon = \"lock\"\n            iconPosition = \"left\"\n            placeholder = \"Password\"\n            type = \"password\"\n            onChange = { this.handleChange }\n            value = \"password\" / >\n\n            <\n            Form.Input name = \"passwordConfirmation\"\n            icon = \"repeat\"\n            iconPosition = \"left\"\n            placeholder = \"Password Confirmation\"\n            type = \"password\"\n            onChange = { this.handleChange }\n            value = \"passwordConfirmation\" / >\n\n            <\n            Button color = \"orange\"\n            fluid size = \"large\" > Submit < /Button> <\n            Message >\n            Already have an account ? < Link to = \"/Login\" > Login < /Link> < /\n            Message > <\n            /Segment> < /\n            Form > <\n            /Grid.Column> < /\n            Grid >\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}